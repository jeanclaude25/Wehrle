/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'
import React, { useMemo, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useControls } from "leva";
import { useEffect } from "react";
import ObjectInstance from './ObjectInstance';


export default function Model(props) {

  const { nodes, materials } = useGLTF("./reception.glb");
  const openRef = useRef();

  const controls = useControls({
    opacity: {value:1, min:0, max:1, step:0.01}
  })
  
  useEffect(()=>{
    openRef.current.material.transparent = true
  },[])

  useEffect(()=>{
  openRef.current.material.opacity = controls.opacity
  },[controls.opacity])

  const toitValeurs = useMemo(() => [
    new THREE.Vector3(0, 0,0),
    new THREE.Vector3(58, 0, 0),
    new THREE.Vector3(116, 0, 0),
    new THREE.Vector3(174, 0, 0),
    new THREE.Vector3(232, 0, 0),
    new THREE.Vector3(290, 0, 0),
    new THREE.Vector3(348, 0, 0),
    new THREE.Vector3(406, 0, 0)
  ])
  const sortieValeur = useMemo(() => [
    new THREE.Vector3(0, 0,0),
    new THREE.Vector3(0, -5.1, -35.5)
  ])
  const longTubeValeur = useMemo(() => [
    new THREE.Vector3(12.94, 14.08, 42.87),
    new THREE.Vector3(12.94, 4.07, 42.79),
    new THREE.Vector3(12.95, 6.07, 42.79),
    new THREE.Vector3(12.94, 8.08, 42.79),
    new THREE.Vector3(12.95, 10.07, 42.79),
    new THREE.Vector3(12.94, 12.08, 42.87),

    new THREE.Vector3(18.84, 10.07, 42.81),
    new THREE.Vector3(18.84, 4.07, 42.81),
    new THREE.Vector3(18.84, 8.07, 42.81),
    new THREE.Vector3(18.84, 6.07, 42.81),
    new THREE.Vector3(18.84, 12.08, 42.88),
    new THREE.Vector3(18.84, 14.08, 42.88)
  ])
  const expulsPosValeur = useMemo(() => [
    new THREE.Vector3(12.59, 10.68, 49.68),
    new THREE.Vector3(13.3, 9.48, 36.18),
    new THREE.Vector3(12.59, 8.68, 49.68),
    new THREE.Vector3(13.3, 7.48, 36.18),
    new THREE.Vector3(12.59, 6.68, 49.68),
    new THREE.Vector3(13.3, 5.48, 36.18),
    new THREE.Vector3(12.59, 4.68, 49.68),
    new THREE.Vector3(13.3, 3.48, 36.18),
    new THREE.Vector3(19.17, 10.68, 49.69),
    new THREE.Vector3(18.49, 9.48, 36.18),
    new THREE.Vector3(19.17, 8.68, 49.69),
    new THREE.Vector3(18.49, 7.48, 36.19),
    new THREE.Vector3(19.17, 6.68, 49.69),
    new THREE.Vector3(18.49, 5.48, 36.19),
    new THREE.Vector3(18.49, 3.48, 36.18),
    new THREE.Vector3(19.17, 4.68, 49.69)
  ])
  const expulsRotValeur = useMemo(() => [
    [0, 0, 0],
    [0, 0, Math.PI],
    [0, 0, 0],
    [0, 0, Math.PI],
    [0, 0, 0],
    [0, 0, Math.PI],
    [0, 0, Math.PI],
    [Math.PI, 0, Math.PI],
    [-Math.PI, 0, 0],
    [Math.PI, 0, Math.PI],
    [-Math.PI, 0, 0],
    [Math.PI, 0, Math.PI],
    [-Math.PI, 0, 0],
    [-Math.PI, 0, 0],
    [Math.PI, 0, Math.PI],
    [Math.PI, 0, Math.PI]
  ])

  const cerjointValeur = useMemo(() => [
    new THREE.Vector3(12.95, 14.06, 35.41),
    new THREE.Vector3(12.93, 4.06, 50.42),
    new THREE.Vector3(18.83, 4.06, 35.42),
    new THREE.Vector3(18.83, 10.06, 35.42),
    new THREE.Vector3(18.83, 12.06, 35.42),
    new THREE.Vector3(18.83, 14.06, 35.42),
    new THREE.Vector3(18.81, 4.06, 50.43),
    new THREE.Vector3(18.81, 12.06, 50.43),
    new THREE.Vector3(18.81, 14.06, 50.43),
    new THREE.Vector3(18.81, 10.06, 50.43),
    new THREE.Vector3(18.81, 8.06, 50.43),
    new THREE.Vector3(18.83, 8.06, 35.42),
    new THREE.Vector3(18.83, 6.06, 35.42),
    new THREE.Vector3(18.81, 6.06, 50.43),
    new THREE.Vector3(12.93, 10.06, 50.42),
    new THREE.Vector3(12.93, 14.06, 50.42),
    new THREE.Vector3(12.95, 4.06, 35.41),
    new THREE.Vector3(12.95, 8.06, 35.41),
    new THREE.Vector3(12.95, 6.06, 35.41),
    new THREE.Vector3(12.95, 12.06, 35.41),
    new THREE.Vector3(12.95, 10.06, 35.41),
    new THREE.Vector3(12.93, 8.06, 50.42),
    new THREE.Vector3(12.93, 6.06, 50.42),
    new THREE.Vector3(12.93, 12.06, 50.42)
  ])

  const cercleSerjointValeur = useMemo(() => [
    new THREE.Vector3(12.93, 10.08, 50.63),
    new THREE.Vector3(12.93, 12.08, 50.63),
    new THREE.Vector3(12.93, 4.08, 50.63),
    new THREE.Vector3(12.93, 8.08, 50.63),
    new THREE.Vector3(12.95, 14.08, 35.26),
    new THREE.Vector3(12.95, 12.08, 35.26),
    new THREE.Vector3(12.95, 10.08, 35.26),
    new THREE.Vector3(12.93, 6.08, 50.63),
    new THREE.Vector3(12.95, 4.08, 35.26),
    new THREE.Vector3(12.93, 14.08, 50.63),
    new THREE.Vector3(12.95, 6.08, 35.26),
    new THREE.Vector3(18.84, 8.08, 35.27),
    new THREE.Vector3(12.95, 8.08, 35.26),
    new THREE.Vector3(18.84, 14.08, 35.27),
    new THREE.Vector3(18.84, 10.08, 35.27),
    new THREE.Vector3(18.82, 12.08, 50.63),
    new THREE.Vector3(18.84, 12.08, 35.27),
    new THREE.Vector3(18.82, 10.08, 50.63),
    new THREE.Vector3(18.84, 6.08, 35.27),
    new THREE.Vector3(18.82, 6.08, 50.63),
    new THREE.Vector3(18.84, 4.08, 35.27),
    new THREE.Vector3(18.82, 8.08, 50.63),
    new THREE.Vector3(18.82, 14.08, 50.63),
    new THREE.Vector3(18.82, 4.08, 50.63)
  ])

  const coudeRotValeur = useMemo(() => [
    [-Math.PI / 2, 0, 1.57],
    [Math.PI / 2, 0, -1.57],
    [-Math.PI / 2, 0, 1.57],
    [Math.PI / 2, 0, -1.57],
    [-Math.PI / 2, 0, -1.57],
    [-Math.PI / 2, 0, -1.57],
    [Math.PI / 2, 0, 1.57],
    [Math.PI / 2, 0, 1.57],
    [-Math.PI / 2, 0, -Math.PI / 2],
    [Math.PI / 2, 0, 1.57],
    [-Math.PI / 2, 0, -1.57],
    [-Math.PI / 2, 0, -1.57],
    [Math.PI / 2, 0, 1.57],
    [Math.PI / 2, 0, 1.57],
    [-Math.PI / 2, 0, -1.57],
    [-Math.PI / 2, 0, 1.57],
    [Math.PI / 2, 0, -1.57],
    [Math.PI / 2, 0, 1.57],
    [-Math.PI / 2, 0, 1.57],
    [Math.PI / 2, 0, -1.57]
  ])
  const coudePosValeur = useMemo(() => [
    new THREE.Vector3(12.92, 11.72, 51.62),
    new THREE.Vector3(12.92, 10.42, 51.62),
    new THREE.Vector3(12.92, 7.72, 51.62),
    new THREE.Vector3(12.92, 6.42, 51.62),
    new THREE.Vector3(12.95, 9.72, 34.23),
    new THREE.Vector3(12.95, 13.72, 34.23),
    new THREE.Vector3(12.95, 8.42, 34.23),
    new THREE.Vector3(12.95, 12.42, 34.23),
    new THREE.Vector3(18.86, 13.72, 34.24),
    new THREE.Vector3(18.86, 12.42, 34.24),
    new THREE.Vector3(12.95, 5.72, 34.23),
    new THREE.Vector3(18.86, 9.72, 34.24),
    new THREE.Vector3(12.95, 4.42, 34.23),
    new THREE.Vector3(18.86, 8.42, 34.24),
    new THREE.Vector3(18.86, 5.72, 34.24),
    new THREE.Vector3(18.84, 11.72, 51.63),
    new THREE.Vector3(18.84, 10.42, 51.63),
    new THREE.Vector3(18.86, 4.42, 34.24),
    new THREE.Vector3(18.84, 7.72, 51.63),
    new THREE.Vector3(18.84, 6.42, 51.63)
  ])

  const Tube_extPosValeur = useMemo(() => [
    new THREE.Vector3(11.36, 9.1, 46.6),
    new THREE.Vector3(11.36, 5.1, 46.6),
    new THREE.Vector3(11.36, 11.1, 46.6),
    new THREE.Vector3(11.36, 13.1, 46.6),
    new THREE.Vector3(11.36, 15.1, 46.6),
    new THREE.Vector3(11.36, 7.1, 46.6),
    new THREE.Vector3(20.4, 5.1, 46.61),
    new THREE.Vector3(20.4, 15.09, 46.61),
    new THREE.Vector3(20.4, 7.1, 46.61),
    new THREE.Vector3(20.4, 11.1, 46.61),
    new THREE.Vector3(20.4, 9.1, 46.61),
    new THREE.Vector3(20.4, 13.1, 46.61)
  ])

  const Tube_extRotValeur = useMemo(() => [
    [-Math.PI / 2, 0, -0.79],
    [-Math.PI / 2, 0, -0.79],
    [-Math.PI / 2, 0, -0.79],
    [-Math.PI / 2, 0, -0.79],
    [-Math.PI / 2, 0, -0.79],
    [-Math.PI / 2, 0, -0.79],
    [-Math.PI / 2, 0, -2.36],
    [-Math.PI / 2, 0, -2.36],
    [-Math.PI / 2, 0, -2.36],
    [-Math.PI / 2, 0, -2.36],
    [-Math.PI / 2, 0, -2.36],
    [-Math.PI / 2, 0, -2.36]
  ])

  //Error on this one
  const basicTubePos = useMemo(() => [
    new THREE.Vector3(19.68, 11.1, 47.73),
    new THREE.Vector3(12.09, 11.11, 47.72),
    new THREE.Vector3(12.09, 9.11, 47.72),
    new THREE.Vector3(12.09, 7.11, 47.72),

    new THREE.Vector3(12.09, 5.11, 47.72),
    new THREE.Vector3(19.68, 9.1, 47.73),
    new THREE.Vector3(19.68, 5.1, 47.73),
    new THREE.Vector3(19.68, 7.1, 47.73)
  ])

  const basicTubeRot = useMemo(() => [
    [0, -0.79, Math.PI],
    [0, 0.78, 0],
    [0, 0.78, 0],
    [0, 0.78, 0],

    [0, 0.78, 0],
    [0, -0.79, Math.PI],
    [0, -0.79, Math.PI],
    [0, -0.79, Math.PI]
  ])

  const basicTubeExtPos = useMemo(() => [
    new THREE.Vector3(19.34, 8.98, 49.61),
    new THREE.Vector3(19.34, 4.98, 49.61),
    new THREE.Vector3(19.34, 6.98, 49.61),
    new THREE.Vector3(12.43, 10.98, 49.6),
    new THREE.Vector3(12.43, 8.98, 49.6),
    new THREE.Vector3(12.43, 6.98, 49.6),
    new THREE.Vector3(12.43, 4.98, 49.6),
    new THREE.Vector3(19.34, 10.98, 49.61)
  ])

  const basicTubeExtRot = useMemo(() => [
    [0, -0.79, -Math.PI],
    [0, -0.79, -Math.PI],
    [0, -0.79, -Math.PI],
    [0.71, -0.36, -1.96],
    [0.71, -0.36, -1.96],
    [0.71, -0.36, -1.96],
    [0.71, -0.36, -1.96],
    [0, -0.79, -Math.PI]
  ])

//**** */
const basicTubeSerjointPos = useMemo(() => [
  new THREE.Vector3(13.37, 9.36, 36.19),
  new THREE.Vector3(12.52, 10.79, 49.69),
  new THREE.Vector3(19.24, 10.79, 49.69),
  new THREE.Vector3(18.43, 9.36, 36.19),
  new THREE.Vector3(13.37, 5.36, 36.19),
  new THREE.Vector3(13.37, 7.36, 36.19),
  new THREE.Vector3(13.37, 3.36, 36.19),
  new THREE.Vector3(12.52, 4.79, 49.69),
  new THREE.Vector3(19.24, 6.79, 49.69),
  new THREE.Vector3(12.52, 6.79, 49.69),
  new THREE.Vector3(12.52, 8.79, 49.69),
  new THREE.Vector3(19.24, 8.79, 49.69),
  new THREE.Vector3(18.43, 3.36, 36.19),
  new THREE.Vector3(18.43, 5.36, 36.19),
  new THREE.Vector3(19.24, 4.79, 49.69),
  new THREE.Vector3(18.43, 7.36, 36.19)
])

const basicTubeSerjointRot = useMemo(() => [
  [1.57, Math.PI / 6, -3.14],
  [1.57, Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14],
  [1.57, Math.PI / 6, -3.14],
  [1.57, Math.PI / 6, -3.14],
  [1.57, Math.PI / 6, -3.14],
  [1.57, Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14],
  [1.57, Math.PI / 6, -3.14],
  [1.57, Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14],
  [1.57, -Math.PI / 6, -3.14]
])


  return (
    <group {...props} dispose={null}>
      <mesh
        name="Containersockel"
        geometry={nodes.Containersockel.geometry}
        material={materials["Material.937"]}
        position={[15.86, 1.79, 62.41]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        name="Fundament11_1"
        geometry={nodes.Fundament11_1.geometry}
        material={materials["Material.267"]}
        position={[-8.62, 1.7, 30.97]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        name="CuveSockel"
        geometry={nodes.CuveSockel.geometry}
        material={materials["Material.265"]}
        position={[1.19, 1.58, -1.21]}
      />
      <group name="Cuve" position={[1.19, 33.97, -1.21]}>
        <mesh
          name="Circle001_1"
          geometry={nodes.Circle001_1.geometry}
          material={materials.Cuve}
        />
        <mesh
          name="Circle001_2"
          ref={openRef}
          geometry={nodes.Circle001_2.geometry}
          material={materials.Open_cuve}
        />
      </group>
      <mesh
        name="Fundament_1_remesh002"
        geometry={nodes.Fundament_1_remesh002.geometry}
        material={materials["Material.265"]}
        position={[-0.5, 1.74, -38.69]}
      />
      <mesh
        name="Circle002"
        geometry={nodes.Circle002.geometry}
        material={nodes.Circle002.material}
        position={[1.2, 47.68, -1.22]}
      />
      <mesh
        name="Circle"
        geometry={nodes.Circle.geometry}
        material={nodes.Circle.material}
        position={[1.2, 11.74, 19.3]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="Circle004"
        geometry={nodes.Circle004.geometry}
        material={nodes.Circle004.material}
        position={[-4.69, 23.31, -23.66]}
      />
      <mesh
        name="Circle005"
        geometry={nodes.Circle005.geometry}
        material={nodes.Circle005.material}
        position={[-2.04, 23.31, -24.37]}
      />
      <mesh
        name="Lamellenstopfen_ID_411_111_1"
        geometry={nodes.Lamellenstopfen_ID_411_111_1.geometry}
        material={materials["Material.244"]}
        position={[-4.69, 45.89, -23.66]}
        rotation={[Math.PI / 2, 0, 0.7]}
      />
      <mesh
        name="Lamellenstopfen_ID_411_111_1001"
        geometry={nodes.Lamellenstopfen_ID_411_111_1001.geometry}
        material={materials["Material.244"]}
        position={[-2.04, 45.89, -24.37]}
        rotation={[Math.PI / 2, 0, 0.7]}
      />
      <mesh
        name="Cylinder270"
        geometry={nodes.Cylinder270.geometry}
        material={nodes.Cylinder270.material}
        position={[-3.34, 2.19, -24.02]}
        rotation={[0, 0.26, -Math.PI / 2]}
      />
      <mesh
        name="Cuve_2"
        geometry={nodes.Cuve_2.geometry}
        material={materials.Cuve}
        position={[1.25, 43.41, -39.74]}
        scale={11.48}
      />
      <mesh
        name="KASTEN_10_S_0_8490_150ASM_1"
        geometry={nodes.KASTEN_10_S_0_8490_150ASM_1.geometry}
        material={materials["Material.436"]}
        position={[1.26, 43.95, -19.94]}
        rotation={[0, 1.57, -0.17]}
      />
      <mesh
        name="DECKEL_KONISCHPRT(2)_1"
        geometry={nodes["DECKEL_KONISCHPRT(2)_1"].geometry}
        material={materials["Material.435"]}
        position={[1.16, 44.31, -20.1]}
        rotation={[0, 1.57, 2.97]}
      />

      <ObjectInstance 
          name="LongTube"
          Positions={longTubeValeur}
          object={nodes.LongTube}
          />
      <ObjectInstance 
          name="expuls"
          Positions={expulsPosValeur}
          Rotations={expulsRotValeur}
          object={nodes.expuls}
          />

      <group name="Sortie"
        position={[-18.43, 4.54, -9.67]}
        rotation={[0, -0.4, -Math.PI / 2]}>
        <ObjectInstance 
          name="Sortie_1"
          Positions={sortieValeur}
          object={nodes.Sortie_1}
          />
          <ObjectInstance 
          name="Sortie_2"
          Positions={sortieValeur}
          object={nodes.Sortie_2}
          />
      </group>
      <group name="serjointGroup">
        <ObjectInstance 
          name="serjoint"
          Positions={cerjointValeur}
          object={nodes.serjoint_Base}
          />
        </group>
        <group name="cercle_serjointGroup">
        <ObjectInstance 
          name="cercle_serjoint"
          Positions={cercleSerjointValeur}
          object={nodes.cercle_serjoint}
          />
        </group>

        <group name="coudeGroup">
        <ObjectInstance 
          name="cercle_serjoint"
          Positions={coudePosValeur}
          Rotations={coudeRotValeur}
          object={nodes.coude}
          />
        </group>

        <group name="Tube_extGroup">
        <ObjectInstance 
          name="Tube_ext"
          Positions={Tube_extPosValeur}
          Rotations={Tube_extRotValeur}
          object={nodes.Tube_ext}
          />
        </group>

      <group name="Walls" position={[95.91, 38.27, -42.08]}>
        <mesh
          name="Walls_1"
          geometry={nodes.Walls_1.geometry}
          material={materials.Wall}
        />
        <mesh
          name="Walls_2"
          geometry={nodes.Walls_2.geometry}
          material={materials.glass}
        />
      </group>
      <mesh
        name="Circle001"
        geometry={nodes.Circle001.geometry}
        material={nodes.Circle001.material}
        position={[1.2, 3.78, 19.3]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="pied"
        geometry={nodes.pied.geometry}
        material={nodes.pied.material}
        position={[11.07, 3.63, 76.24]}
      />
      <mesh
        name="pied001"
        geometry={nodes.pied001.geometry}
        material={nodes.pied001.material}
        position={[15.84, 3.63, 76.24]}
      />
      <mesh
        name="pied002"
        geometry={nodes.pied002.geometry}
        material={nodes.pied002.material}
        position={[20.62, 3.63, 76.24]}
      />
      <mesh
        name="pied003"
        geometry={nodes.pied003.geometry}
        material={nodes.pied003.material}
        position={[12.04, 3.63, 79.89]}
      />
      <mesh
        name="pied004"
        geometry={nodes.pied004.geometry}
        material={nodes.pied004.material}
        position={[15.84, 3.63, 79.89]}
      />
      <mesh
        name="pied005"
        geometry={nodes.pied005.geometry}
        material={nodes.pied005.material}
        position={[19.64, 3.63, 79.89]}
      />
      <mesh
        name="Wä_1001"
        geometry={nodes.Wä_1001.geometry}
        material={materials.Spülbehälter}
        position={[15.84, 8.64, 78.07]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        name="Würfel"
        geometry={nodes.Würfel.geometry}
        material={materials["Material.840"]}
        position={[21.53, 7.17, 68.7]}
        rotation={[-Math.PI / 2, 0, Math.PI]}
      />
      <mesh
        name="Cube062"
        geometry={nodes.Cube062.geometry}
        material={nodes.Cube062.material}
        position={[12.92, 2.72, 57.96]}
      />
      <mesh
        name="Cube063"
        geometry={nodes.Cube063.geometry}
        material={nodes.Cube063.material}
        position={[18.82, 2.72, 57.96]}
      />
      <mesh
        name="R10533_Bogen-90°kurz_d280-KM111_2"
        geometry={nodes["R10533_Bogen-90°kurz_d280-KM111_2"].geometry}
        material={materials["Material.380"]}
        position={[1.13, 11.25, 14.83]}
        rotation={[0, 0, Math.PI / 2]}
      />
      <mesh
        name="R10523_Drehkolbengeblä_1"
        geometry={nodes.R10523_Drehkolbengeblä_1.geometry}
        material={materials["Material.402"]}
        position={[-8.41, 7.02, 25.73]}
      />

      <group name="Toit" position={[43.34, 76.95, 0.89]}>
          <ObjectInstance 
          name="Toit_contour"
          Positions={toitValeurs}
          object={nodes.Toit_1}
          />
          <ObjectInstance 
          name="Toit_fenster"
          Positions={toitValeurs}
          object={nodes.Toit_2}
          />
        </group>

      <group name='BasicTubeGroup'>
      <ObjectInstance 
          name="BasicTube"
          Positions={basicTubePos}
          Rotations={basicTubeRot}
          object={nodes.BasicTube}
          />
      <ObjectInstance 
          name="BasicTubeExt"
          Positions={basicTubeExtPos}
          Rotations={basicTubeExtRot}
          object={nodes.BasicTubeExt}
          />
      </group>

      <group name='BasicTubeSerjointGroup'>
      <ObjectInstance 
          name="BasicTubeSerjoint"
          Positions={basicTubeSerjointPos}
          Rotations={basicTubeSerjointRot}
          object={nodes.BasicTubeSerjoint}
          />
      </group>
      
    </group>
  );
}

useGLTF.preload("./reception.glb");
